on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: true
        description: "Version to release"

name: Release

jobs:
  release_workflow:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Step 1 - Checkout repository code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}

      - name: Step 2 - Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Step 3 - Configure Git user
        run: |
          git config --global user.name "release-action"
          git config --global user.email "release-action@users.noreply.github.com"

      - name: Step 4 - Make Release
        run: |
          mvn -B -ntp release:prepare -DreleaseVersion=${{ github.event.inputs.version }}
          mvn release:perform
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          GPG_EXECUTABLE: gpg
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
          GITHUB_TOKEN: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}

      - name: Step 5 - Merge release to master
        run: |
          git checkout master
          git merge develop
          git push

      - name: Step 6 - Create release notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="$(git describe --abbrev=0)"
          echo $TAG
          gh release create "$TAG" --repo="$GITHUB_REPOSITORY" --title="${GITHUB_REPOSITORY#*/} ${TAG#v}" --generate-notes
